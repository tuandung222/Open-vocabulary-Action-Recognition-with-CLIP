version: '3.8'

services:
  # Training container
  clip-har-train:
    build:
      context: .
      dockerfile: Dockerfile.train
    image: tuandung12092002/clip-har-train:latest
    volumes:
      - ./data:/app/data
      - ./configs:/app/configs
      - ./outputs:/app/outputs
      - ./models/checkpoints:/app/models/checkpoints
      - ./.dvc:/app/.dvc
    environment:
      - PYTHONPATH=/app
      - CUDA_VISIBLE_DEVICES=0
      - MLFLOW_TRACKING_URI=http://localhost:5000
      - WANDB_API_KEY=${WANDB_API_KEY}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # App and inference container
  clip-har-app:
    build:
      context: .
      dockerfile: Dockerfile.app
    image: tuandung12092002/clip-har-app:latest
    ports:
      - "8501:8501"  # Streamlit
      - "8000:8000"  # FastAPI
    volumes:
      - ./models/checkpoints:/app/models/checkpoints
      - ./data:/app/data
    environment:
      - PYTHONPATH=/app
      - CUDA_VISIBLE_DEVICES=0
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  # MLflow tracking server
  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.4.1
    ports:
      - "5000:5000"
    volumes:
      - ./mlruns:/mlruns
    command: mlflow server --backend-store-uri sqlite:///mlruns/mlflow.db --default-artifact-root /mlruns --host 0.0.0.0

  # Local registry (optional)
  registry:
    image: registry:2
    ports:
      - "5001:5000"
    volumes:
      - registry-data:/var/lib/registry

volumes:
  registry-data:
    driver: local
